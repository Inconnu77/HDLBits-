module top_module (
    input clk,
    input reset,   // Synchronous active-high reset
    output [3:1] ena,
    output [15:0] q);
    
    assign ena[3:1] = {(q[11:0] == 12'h999), (q[7:0] == 8'h99), (q[3:0] == 4'h9)};
    bcdcnt cnt1(clk, reset, 1'b1, q[3:0]);
    bcdcnt cnt2(clk, reset, ena[1], q[7:4]);
    bcdcnt cnt3(clk, reset, ena[2], q[11:8]);
    bcdcnt cnt4(clk, reset, ena[3], q[15:12]);
endmodule
module bcdcnt(
    input clk,
    input reset,
    input ena,
    output [3:0] q
);
    always @(posedge clk) begin
        if(reset)
            q <= 4'h0;
        else if(ena)
            q <= (q == 4'h9) ? 4'h0 : q + 4'h1;
        else
            q <= q;
    end
endmodule
